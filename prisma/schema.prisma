// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TradeMark {
  id                            Int                       @id @default(autoincrement())
  createdAt                     DateTime                  @default(now())
  updatedAt                     DateTime                  @updatedAt
  operationCode                 OperationCode
  applicationDate               DateTime                  @db.Date
  applicationNumber             Int                       @db.Integer
  expiryDate                    DateTime?                 @db.Date
  applicationLanguageCode       EUOfficialLanguageCode?
  kindMark                      KindType?
  wordMark                      String                    @db.Text
  tradeDistinctivenessIndicator Boolean?
  secondLanguageCode            EMSecondLanguageCodeType?

  //MarkCurrentStatusCode
  markCurrentStatusCode          MarkCurrentStatusCodeStatus
  markCurrentStatusCodeMilestone Int?
  markCurrentStatusCodeStatus    Int?

  GoodsService GoodsService[]
  Publication  Publication[]
}

model GoodsService {
  id               Int                @id @default(autoincrement())
  TradeMark        TradeMark          @relation(fields: [tradeMarkId], references: [id])
  ClassDescription ClassDescription[]
  tradeMarkId      Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ClassDescription {
  id                      Int                       @id @default(autoincrement())
  classNumber             Int
  GoodsService            GoodsService              @relation(fields: [goodsServiceId], references: [id])
  GoodsServiceDescription GoodsServiceDescription[]
  goodsServiceId          Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model GoodsServiceDescription {
  id                 Int              @id @default(autoincrement())
  description        String           @db.Text
  languageCode       String           @db.VarChar(10)
  ClassDescription   ClassDescription @relation(fields: [classDescriptionId], references: [id])
  classDescriptionId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Publication {
  id                    Int                    @id @default(autoincrement())
  publicationDate       DateTime               @db.Date
  publicationIdentifier String                 @db.VarChar(50)
  publicationPage       Int?
  publicationSection    PublicationSectionType
  TradeMark             TradeMark              @relation(fields: [tradeMarkId], references: [id])
  tradeMarkId           Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum KindType {
  Individual
  Collective
  EUCertificate
}

enum OperationCode {
  Insert
  Delete
}

enum MarkCurrentStatusCodeStatus {
  ApplicationFiled
  ApplicationPublished
  ApplicationRefused
  ApplicationUnderExamination
  ApplicationWithdrawn
  RegistrationPending
  ApplicationOpposed
  AppealPending
  RegistrationCancellationPending
  RegistrationCancelled
  RegistrationExpired
  RegistrationSurrendered
  Registered
}

enum EUOfficialLanguageCode {
  BG
  CS
  DA
  DE
  EL
  EN
  ES
  ET
  FI
  FR
  HR
  HU
  IT
  LT
  LV
  MT
  NL
  PL
  PT
  RO
  SK
  SL
  SV
}

enum PublicationSectionType {
  A_1
  A_2
  A_2_1
  A_2_1_1
  A_2_1_2
  A_2_2
  A_2_3
  A_2_4_1
  A_2_4_2
  A_2_5_1
  A_2_5_2
  B_1
  B_2
  B_3
  B_4_1
  B_4_2
  C_1_1
  C_1_2
  C_1_3
  C_1_4
  C_2_1
  C_2_2
  C_2_3
  C_2_4
  C_3_1
  C_3_2
  C_3_4
  C_3_5
  C_3_6
  C_3_7
  C_3_8_1
  C_3_8_2
  C_4_1
  C_4_2
  C_4_3
  C_4_4
  C_4_5
  C_5_1
  C_5_2
  C_5_3
  C_5_4
  C_6_1
  C_6_2
  C_6_3
  C_7_1
  C_7_2
  C_7_3
  C_8_1
  C_8_2
  C_9_1
  C_9_2
  C_9_3
  C_9_4
  C_10_1
  C_10_2
  D_1
  D_2_1
  D_2_2
  E_1
  E_2_1
  E_2_2
  E_3
  E_4_1
  E_4_2
  E_5_1
  E_5_2
  E_6_1
  E_6_2
  F_1
  F_2_1
  F_2_2
}

enum EMSecondLanguageCodeType {
  EN
  ES
  FR
  DE
  IT
}
